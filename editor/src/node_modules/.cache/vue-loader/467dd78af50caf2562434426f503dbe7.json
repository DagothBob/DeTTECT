{"remainingRequest":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/holger/DeTTECT_Project/DeTTECT/editor/src/components/SidebarPlugin/SideBar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/holger/DeTTECT_Project/DeTTECT/editor/src/components/SidebarPlugin/SideBar.vue","mtime":1638053205630},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/babel-loader/lib/index.js","mtime":1638056082284},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":1638056082020},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":1638056081964}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBTaWRlYmFyTGluayBmcm9tICcuL1NpZGViYXJMaW5rJzsKCmV4cG9ydCBkZWZhdWx0IHsKICAgIHByb3BzOiB7CiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgICAgdHlwZTogU3RyaW5nLAogICAgICAgICAgICBkZWZhdWx0OiAnRGVUVCZDVCBFZGl0b3InCiAgICAgICAgfSwKICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IHsKICAgICAgICAgICAgdHlwZTogU3RyaW5nLAogICAgICAgICAgICBkZWZhdWx0OiAnYmx1ZScKICAgICAgICB9LAogICAgICAgIGFjdGl2ZUNvbG9yOiB7CiAgICAgICAgICAgIHR5cGU6IFN0cmluZywKICAgICAgICAgICAgZGVmYXVsdDogJ3N1Y2Nlc3MnLAogICAgICAgICAgICB2YWxpZGF0b3I6IHZhbHVlID0+IHsKICAgICAgICAgICAgICAgIGxldCBhY2NlcHRlZFZhbHVlcyA9IFsncHJpbWFyeScsICdpbmZvJywgJ3N1Y2Nlc3MnLCAnd2FybmluZycsICdkYW5nZXInXTsKICAgICAgICAgICAgICAgIHJldHVybiBhY2NlcHRlZFZhbHVlcy5pbmRleE9mKHZhbHVlKSAhPT0gLTE7CiAgICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHNpZGViYXJMaW5rczogewogICAgICAgICAgICB0eXBlOiBBcnJheSwKICAgICAgICAgICAgZGVmYXVsdDogKCkgPT4gW10KICAgICAgICB9LAogICAgICAgIGF1dG9DbG9zZTogewogICAgICAgICAgICB0eXBlOiBCb29sZWFuLAogICAgICAgICAgICBkZWZhdWx0OiB0cnVlCiAgICAgICAgfQogICAgfSwKICAgIHByb3ZpZGUoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgYXV0b0Nsb3NlOiB0aGlzLmF1dG9DbG9zZSwKICAgICAgICAgICAgYWRkTGluazogdGhpcy5hZGRMaW5rLAogICAgICAgICAgICByZW1vdmVMaW5rOiB0aGlzLnJlbW92ZUxpbmsKICAgICAgICB9OwogICAgfSwKICAgIGNvbXBvbmVudHM6IHsKICAgICAgICBTaWRlYmFyTGluawogICAgfSwKICAgIGNvbXB1dGVkOiB7CiAgICAgICAgLyoqCiAgICAgICAgICogU3R5bGVzIHRvIGFuaW1hdGUgdGhlIGFycm93IG5lYXIgdGhlIGN1cnJlbnQgYWN0aXZlIHNpZGViYXIgbGluawogICAgICAgICAqIEByZXR1cm5zIHt7dHJhbnNmb3JtOiBzdHJpbmd9fQogICAgICAgICAqLwogICAgICAgIGFycm93TW92ZVB4KCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy5saW5rSGVpZ2h0ICogdGhpcy5hY3RpdmVMaW5rSW5kZXg7CiAgICAgICAgfSwKICAgICAgICBzaG9ydFRpdGxlKCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy50aXRsZQogICAgICAgICAgICAgICAgLnNwbGl0KCcgJykKICAgICAgICAgICAgICAgIC5tYXAod29yZCA9PiB3b3JkLmNoYXJBdCgwKSkKICAgICAgICAgICAgICAgIC5qb2luKCcnKQogICAgICAgICAgICAgICAgLnRvVXBwZXJDYXNlKCk7CiAgICAgICAgfQogICAgfSwKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgbGlua0hlaWdodDogNjUsCiAgICAgICAgICAgIGFjdGl2ZUxpbmtJbmRleDogMCwKICAgICAgICAgICAgd2luZG93V2lkdGg6IDAsCiAgICAgICAgICAgIGlzV2luZG93czogZmFsc2UsCiAgICAgICAgICAgIGhhc0F1dG9IZWlnaHQ6IGZhbHNlLAogICAgICAgICAgICBsaW5rczogW10KICAgICAgICB9OwogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBmaW5kQWN0aXZlTGluaygpIHsKICAgICAgICAgICAgdGhpcy5saW5rcy5mb3JFYWNoKChsaW5rLCBpbmRleCkgPT4gewogICAgICAgICAgICAgICAgaWYgKGxpbmsuaXNBY3RpdmUoKSkgewogICAgICAgICAgICAgICAgICAgIHRoaXMuYWN0aXZlTGlua0luZGV4ID0gaW5kZXg7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgIH0sCiAgICAgICAgYWRkTGluayhsaW5rKSB7CiAgICAgICAgICAgIGNvbnN0IGluZGV4ID0gdGhpcy4kc2xvdHMubGlua3MuaW5kZXhPZihsaW5rLiR2bm9kZSk7CiAgICAgICAgICAgIHRoaXMubGlua3Muc3BsaWNlKGluZGV4LCAwLCBsaW5rKTsKICAgICAgICB9LAogICAgICAgIHJlbW92ZUxpbmsobGluaykgewogICAgICAgICAgICBjb25zdCBpbmRleCA9IHRoaXMubGlua3MuaW5kZXhPZihsaW5rKTsKICAgICAgICAgICAgaWYgKGluZGV4ID4gLTEpIHsKICAgICAgICAgICAgICAgIHRoaXMubGlua3Muc3BsaWNlKGluZGV4LCAxKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0sCiAgICBtb3VudGVkKCkgewogICAgICAgIHRoaXMuJHdhdGNoKCckcm91dGUnLCB0aGlzLmZpbmRBY3RpdmVMaW5rLCB7CiAgICAgICAgICAgIGltbWVkaWF0ZTogdHJ1ZQogICAgICAgIH0pOwogICAgfQp9Owo="},{"version":3,"sources":["SideBar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SideBar.vue","sourceRoot":"components/SidebarPlugin","sourcesContent":["<template>\n    <div class=\"sidebar\" :data=\"backgroundColor\">\n        <!--\n            Tip 1: you can change the color of the sidebar's background using: data-background-color=\"white | black | darkblue\"\n            Tip 2: you can change the color of the active button using the data-active-color=\"primary | info | success | warning | danger\"\n        -->\n        <!-- -->\n        <div class=\"sidebar-wrapper\" id=\"style-3\">\n            <div class=\"logo\">\n                <a href=\"https://github.com/rabobank-cdc/DeTTECT\" target=\"blank\" aria-label=\"sidebar mini logo\" class=\"simple-text logo-mini\">\n                    <div class=\"logo-img\" :class=\"{ 'logo-img-rtl': $rtl.isRTL }\">\n                        <img src=\"img/logo.png\" alt />\n                    </div>\n                </a>\n                <span class=\"simple-text logo-normal custom-title custom-title1\">DeTT&CT</span>\n                <span class=\"simple-text logo-normal custom-title\">Editor</span>\n            </div>\n            <slot></slot>\n            <ul class=\"nav\">\n                <!--By default vue-router adds an active class to each route link. This way the links are colored when clicked-->\n                <slot name=\"links\">\n                    <sidebar-link\n                        v-for=\"(link, index) in sidebarLinks\"\n                        :key=\"index\"\n                        :to=\"link.path\"\n                        :name=\"link.name\"\n                        :icon=\"link.icon\"\n                    ></sidebar-link>\n                </slot>\n            </ul>\n        </div>\n    </div>\n</template>\n<script>\nimport SidebarLink from './SidebarLink';\n\nexport default {\n    props: {\n        title: {\n            type: String,\n            default: 'DeTT&CT Editor'\n        },\n        backgroundColor: {\n            type: String,\n            default: 'blue'\n        },\n        activeColor: {\n            type: String,\n            default: 'success',\n            validator: value => {\n                let acceptedValues = ['primary', 'info', 'success', 'warning', 'danger'];\n                return acceptedValues.indexOf(value) !== -1;\n            }\n        },\n        sidebarLinks: {\n            type: Array,\n            default: () => []\n        },\n        autoClose: {\n            type: Boolean,\n            default: true\n        }\n    },\n    provide() {\n        return {\n            autoClose: this.autoClose,\n            addLink: this.addLink,\n            removeLink: this.removeLink\n        };\n    },\n    components: {\n        SidebarLink\n    },\n    computed: {\n        /**\n         * Styles to animate the arrow near the current active sidebar link\n         * @returns {{transform: string}}\n         */\n        arrowMovePx() {\n            return this.linkHeight * this.activeLinkIndex;\n        },\n        shortTitle() {\n            return this.title\n                .split(' ')\n                .map(word => word.charAt(0))\n                .join('')\n                .toUpperCase();\n        }\n    },\n    data() {\n        return {\n            linkHeight: 65,\n            activeLinkIndex: 0,\n            windowWidth: 0,\n            isWindows: false,\n            hasAutoHeight: false,\n            links: []\n        };\n    },\n    methods: {\n        findActiveLink() {\n            this.links.forEach((link, index) => {\n                if (link.isActive()) {\n                    this.activeLinkIndex = index;\n                }\n            });\n        },\n        addLink(link) {\n            const index = this.$slots.links.indexOf(link.$vnode);\n            this.links.splice(index, 0, link);\n        },\n        removeLink(link) {\n            const index = this.links.indexOf(link);\n            if (index > -1) {\n                this.links.splice(index, 1);\n            }\n        }\n    },\n    mounted() {\n        this.$watch('$route', this.findActiveLink, {\n            immediate: true\n        });\n    }\n};\n</script>\n"]}]}