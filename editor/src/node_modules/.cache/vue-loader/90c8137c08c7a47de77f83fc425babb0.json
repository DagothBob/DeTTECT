{"remainingRequest":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/holger/DeTTECT_Project/DeTTECT/editor/src/pages/GroupsDetail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/holger/DeTTECT_Project/DeTTECT/editor/src/pages/GroupsDetail.vue","mtime":1638053205634},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/babel-loader/lib/index.js","mtime":1638056082284},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":1638056082020},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":1638056081964}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBBdXRvU3VnZ2VzdEdyb3VwIGZyb20gJ0AvY29tcG9uZW50cy9JbnB1dHMvQXV0b1N1Z2dlc3RHcm91cCc7CmltcG9ydCBDdXN0b21LZXlWYWx1ZUVkaXRvciBmcm9tICdAL2NvbXBvbmVudHMvSW5wdXRzL0N1c3RvbUtleVZhbHVlRWRpdG9yJzsKaW1wb3J0IFRvZ2dsZUJ1dHRvbiBmcm9tICdAL2NvbXBvbmVudHMvSW5wdXRzL1RvZ2dsZUJ1dHRvbic7CmltcG9ydCBNb2RhbCBmcm9tICdAL2NvbXBvbmVudHMvTW9kYWwnOwppbXBvcnQgSWNvbnMgZnJvbSAnQC9jb21wb25lbnRzL0ljb25zJzsKaW1wb3J0IHRlY2huaXF1ZXMgZnJvbSAnQC9kYXRhL3RlY2huaXF1ZXMnOwppbXBvcnQgc29mdHdhcmUgZnJvbSAnQC9kYXRhL3NvZnR3YXJlJzsKaW1wb3J0IGNvbnN0YW50cyBmcm9tICdAL2NvbnN0YW50cyc7CmltcG9ydCB7IHBhZ2VEZXRhaWxNaXhpbiB9IGZyb20gJ0AvbWl4aW5zL1BhZ2VEZXRhaWxNaXhpbnMuanMnOwppbXBvcnQgJ3Z1ZS1kaXJlY3RpdmUtdG9vbHRpcC9kaXN0L3Z1ZURpcmVjdGl2ZVRvb2x0aXAuY3NzJzsKCgpleHBvcnQgZGVmYXVsdCB7CiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIHRlY2huaXF1ZXM6IHRlY2huaXF1ZXMsCiAgICAgICAgICAgIHNvZnR3YXJlOiBzb2Z0d2FyZSwKICAgICAgICAgICAgZ3JvdXBEZWZhdWx0S2V5czogT2JqZWN0LmtleXMoY29uc3RhbnRzLllBTUxfT0JKX0dST1VQKSwKICAgICAgICAgICAgZWRpdEdyb3VwTmFtZTogZmFsc2UsCiAgICAgICAgICAgIGhlbHB0ZXh0R3JvdXBLVlBhaXJzOiBmYWxzZQogICAgICAgIH07CiAgICB9LAogICAgbWl4aW5zOiBbcGFnZURldGFpbE1peGluXSwKICAgIHByb3BzOiB7CiAgICAgICAgZ3JvdXA6IHsKICAgICAgICAgICAgdHlwZTogT2JqZWN0LAogICAgICAgICAgICByZXF1aXJlZDogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgYWxsR3JvdXBzOiB7CiAgICAgICAgICAgIHR5cGU6IEFycmF5LAogICAgICAgICAgICByZXF1aXJlZDogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgc2VsZWN0ZWRQbGF0Zm9ybXM6IHsKICAgICAgICAgICAgdHlwZTogQXJyYXksCiAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICAgICAgfSwKICAgICAgICBncm91cEhlbHBUZXh0OiB7CiAgICAgICAgICAgIHR5cGU6IFN0cmluZwogICAgICAgIH0KICAgIH0sCiAgICB3YXRjaDogewogICAgICAgIGdyb3VwKCkgewogICAgICAgICAgICAvLyB0aGlzIG1ha2Ugc3VyZSB0byBkaXNhYmxlIHRoZSBlZGl0ICdib3gnIHdoZW4gbmVjZXNzYXJ5CiAgICAgICAgICAgIHRoaXMuZWRpdEdyb3VwTmFtZSA9IGZhbHNlOwogICAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgZXNjYXBlS2V5TGlzdGVuZXI6IGZ1bmN0aW9uKGV2dCkgewogICAgICAgICAgICBpZiAoZXZ0LmtleUNvZGUgPT09IDI3ICYmIHRoaXMuaGVscHRleHRHcm91cEtWUGFpcnMpIHsKICAgICAgICAgICAgICAgIHRoaXMuaGVscHRleHRHcm91cEtWUGFpcnMgPSBmYWxzZTsKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgZ2V0R3JvdXBJRHMoKSB7CiAgICAgICAgICAgIC8vIHJldHVybiBhIGxpc3QgY29udGFpbmluZyB0aGUgY29tYmluYXRpb24gb2YgZ3JvdXBfbmFtZStjYW1wYWlnbiBvZiBhbGwgZ3JvdXAgb2JqZWN0cyBpbiB0aGUgWUFNTCBmaWxlCiAgICAgICAgICAgIGxldCBncm91cElEcyA9IFtdOwogICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuYWxsR3JvdXBzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgICAgICBncm91cElEcy5wdXNoKHRoaXMuYWxsR3JvdXBzW2ldLmdyb3VwX25hbWUudG9Mb3dlckNhc2UoKSArIHRoaXMuYWxsR3JvdXBzW2ldLmNhbXBhaWduLnRvTG93ZXJDYXNlKCkpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiBncm91cElEczsKICAgICAgICB9CiAgICB9LAogICAgY29tcHV0ZWQ6IHsKICAgICAgICBpc05ld0dyb3VwKCkgewogICAgICAgICAgICByZXR1cm4gdGhpcy5ncm91cC5ncm91cF9uYW1lID09ICcnID8gdHJ1ZSA6IGZhbHNlOwogICAgICAgIH0sCiAgICAgICAgaXNVbmlxdWVHcm91cCgpIHsKICAgICAgICAgICAgLy8gY2hlY2tzIGlmIHRoZSBjb21iaW5hdGlvbiBvZiBncm91cF9uYW1lK2NhbXBhaWduIGlzIHVuaXF1ZQogICAgICAgICAgICBsZXQgZ3JvdXBJRHMgPSB0aGlzLmdldEdyb3VwSURzKCk7CiAgICAgICAgICAgIGxldCBjb3VudGVyID0gMDsKCiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZ3JvdXBJRHMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgICAgIGlmIChncm91cElEc1tpXSA9PSB0aGlzLmdyb3VwLmdyb3VwX25hbWUudG9Mb3dlckNhc2UoKSArIHRoaXMuZ3JvdXAuY2FtcGFpZ24udG9Mb3dlckNhc2UoKSkgewogICAgICAgICAgICAgICAgICAgIGNvdW50ZXIrKzsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gY291bnRlciA+IDEgPyBmYWxzZSA6IHRydWU7CiAgICAgICAgfQogICAgfSwKICAgIGNvbXBvbmVudHM6IHsKICAgICAgICBBdXRvU3VnZ2VzdEdyb3VwLAogICAgICAgIFRvZ2dsZUJ1dHRvbiwKICAgICAgICBDdXN0b21LZXlWYWx1ZUVkaXRvciwKICAgICAgICBNb2RhbCwKICAgICAgICBJY29ucwogICAgfQp9Owo="},{"version":3,"sources":["GroupsDetail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GroupsDetail.vue","sourceRoot":"pages","sourcesContent":["<template>\n    <div>\n        <div class=\"container-fluid d-flex flex-column\">\n            <div v-if=\"isNewGroup || editGroupName\">\n                <div class=\"row\">\n                    <div class=\"col-md-auto pr-md-0 pl-md-0 margin-top-8\">\n                        <label>Group name</label>\n                    </div>\n                    <div class=\"col-md-7 pl-md-2 pr-md-0\">\n                        <base-input\n                            :value=\"group.group_name\"\n                            @change=\"group.group_name = $event.target.value\"\n                            @keyup.enter=\"editGroupName = false\"\n                            @keydown.tab=\"editGroupName = false\"\n                            @blur=\"editGroupName = false\"\n                        ></base-input>\n                    </div>\n                    <div class=\"col-md-auto\">\n                        <i class=\"tim-icons icon-check-2 icon-color icon-padding cursor-pointer\" @click=\"editGroupName = false\"></i>\n                    </div>\n                </div>\n            </div>\n            <div v-else class=\"row flex-fill\">\n                <div class=\"col-md pr-md-0 pl-md-0\">\n                    <span id=\"detailCard\" class=\"card-title\">{{ group.group_name }}</span>\n                    <i class=\"tim-icons icon-pencil icon-color icon-padding cursor-pointer\" @click=\"editGroupName = true\"></i>\n                </div>\n            </div>\n        </div>\n        <div class=\"row mt-md-3\">\n            <div class=\"col-md-auto pr-md-0\">\n                <h5 class=\"title mb-md-3\">Group key-value pairs</h5>\n            </div>\n            <div class=\"col ml-md-0\" @click=\"helptextGroupKVPairs = true\">\n                <icons icon=\"help\" tooltip=\"Click to open more information.\"></icons>\n            </div>\n            <modal :show.sync=\"helptextGroupKVPairs\" class=\"modal-help\" id=\"dsModal\" :centered=\"false\" :show-close=\"true\">\n                <h1 slot=\"header\">Group key-value pairs</h1>\n                <div class=\"markdown-popup\">\n                    <VueShowdown :markdown=\"groupHelpText\" />\n                </div>\n            </modal>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-md-5 pr-md-0 form-group\">\n                <div>\n                    <label>Campaign name</label>\n                </div>\n                <div>\n                    <base-input :value=\"group.campaign\" @change=\"group.campaign = $event.target.value\"></base-input>\n                </div>\n            </div>\n            <div class=\"col-md-3 mt-md-1 form-group\">\n                <toggle-button\n                    :state=\"group.enabled\"\n                    name=\"Enabled\"\n                    @toggleButtonUpdated=\"group.enabled = $event\"\n                    :extraPaddingBottom=\"false\"\n                ></toggle-button>\n            </div>\n        </div>\n        <div class=\"row mt-md-0 mb-md-3\" v-if=\"!isUniqueGroup\">\n            <div class=\"col-md-auto pr-md-0\">\n                <i class=\"tim-icons icon-alert-circle-exc icon-color-warning\"></i>\n            </div>\n            <div class=\"col-md-auto pl-md-2\">\n                <label class=\"label-warning\" id=\"warningText\">The combination of group name and campaign should be unique.</label>\n            </div>\n        </div>\n        <auto-suggest-group\n            title=\"Technique IDs\"\n            :group=\"group\"\n            itemIdName=\"technique_id\"\n            :platforms=\"selectedPlatforms\"\n            :suggestionList=\"techniques\"\n            valueAttr=\"technique_id\"\n        ></auto-suggest-group>\n        <div class=\"row mt-md-0 mb-md-3\" v-if=\"group.technique_id.length < 1\">\n            <div class=\"col-md-auto pr-md-0\">\n                <i class=\"tim-icons icon-alert-circle-exc icon-color-warning\"></i>\n            </div>\n            <div class=\"col-md-auto pl-md-2\">\n                <label class=\"label-warning\" id=\"warningText\">A group YAML should contain at least one technique ID.</label>\n            </div>\n        </div>\n        <auto-suggest-group\n            class=\"mt-md-3\"\n            title=\"Software IDs\"\n            :group=\"group\"\n            itemIdName=\"software_id\"\n            :platforms=\"selectedPlatforms\"\n            :suggestionList=\"software\"\n            valueAttr=\"software_id\"\n        ></auto-suggest-group>\n        <custom-key-value-editor :item=\"group\" :defaultKeys=\"groupDefaultKeys\" class=\"mt-md-3\"></custom-key-value-editor>\n    </div>\n</template>\n\n<script>\nimport AutoSuggestGroup from '@/components/Inputs/AutoSuggestGroup';\nimport CustomKeyValueEditor from '@/components/Inputs/CustomKeyValueEditor';\nimport ToggleButton from '@/components/Inputs/ToggleButton';\nimport Modal from '@/components/Modal';\nimport Icons from '@/components/Icons';\nimport techniques from '@/data/techniques';\nimport software from '@/data/software';\nimport constants from '@/constants';\nimport { pageDetailMixin } from '@/mixins/PageDetailMixins.js';\nimport 'vue-directive-tooltip/dist/vueDirectiveTooltip.css';\n\n\nexport default {\n    data() {\n        return {\n            techniques: techniques,\n            software: software,\n            groupDefaultKeys: Object.keys(constants.YAML_OBJ_GROUP),\n            editGroupName: false,\n            helptextGroupKVPairs: false\n        };\n    },\n    mixins: [pageDetailMixin],\n    props: {\n        group: {\n            type: Object,\n            required: true\n        },\n        allGroups: {\n            type: Array,\n            required: true\n        },\n        selectedPlatforms: {\n            type: Array,\n            required: true\n        },\n        groupHelpText: {\n            type: String\n        }\n    },\n    watch: {\n        group() {\n            // this make sure to disable the edit 'box' when necessary\n            this.editGroupName = false;\n        }\n    },\n    methods: {\n        escapeKeyListener: function(evt) {\n            if (evt.keyCode === 27 && this.helptextGroupKVPairs) {\n                this.helptextGroupKVPairs = false;\n            }\n        },\n        getGroupIDs() {\n            // return a list containing the combination of group_name+campaign of all group objects in the YAML file\n            let groupIDs = [];\n            for (let i = 0; i < this.allGroups.length; i++) {\n                groupIDs.push(this.allGroups[i].group_name.toLowerCase() + this.allGroups[i].campaign.toLowerCase());\n            }\n            return groupIDs;\n        }\n    },\n    computed: {\n        isNewGroup() {\n            return this.group.group_name == '' ? true : false;\n        },\n        isUniqueGroup() {\n            // checks if the combination of group_name+campaign is unique\n            let groupIDs = this.getGroupIDs();\n            let counter = 0;\n\n            for (let i = 0; i < groupIDs.length; i++) {\n                if (groupIDs[i] == this.group.group_name.toLowerCase() + this.group.campaign.toLowerCase()) {\n                    counter++;\n                }\n            }\n            return counter > 1 ? false : true;\n        }\n    },\n    components: {\n        AutoSuggestGroup,\n        ToggleButton,\n        CustomKeyValueEditor,\n        Modal,\n        Icons\n    }\n};\n</script>\n"]}]}