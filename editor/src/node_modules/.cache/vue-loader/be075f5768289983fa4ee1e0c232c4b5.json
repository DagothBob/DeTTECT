{"remainingRequest":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/holger/DeTTECT_Project/DeTTECT/editor/src/pages/GroupsPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/holger/DeTTECT_Project/DeTTECT/editor/src/pages/GroupsPage.vue","mtime":1638053205634},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/babel-loader/lib/index.js","mtime":1638056082284},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":1638056082020},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":1638056081964}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["GroupsPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"GroupsPage.vue","sourceRoot":"pages","sourcesContent":["<template>\n    <div>\n        <div v-if=\"doc != null\" class=\"back-to-top\">\n            <label @click=\"navigateToTop\" class=\"cursor-pointer\" title=\"Back to top\">\n                <icons icon=\"arrow-up\"></icons>\n            </label>\n        </div>\n\n        <div class=\"row\" id=\"pageTop\">\n            <div class=\"col\">\n                <div class=\"card card-card\">\n                    <div class=\"card-header\">\n                        <h2 class=\"card-title\"><i class=\"tim-icons icon-single-02\"></i> Groups</h2>\n                    </div>\n                    <div class=\"card-body\">\n                        <div class=\"row\">\n                            <div class=\"col\">\n                                <button type=\"button\" class=\"btn mr-md-3\" @click=\"askNewFile\">\n                                    <icons icon=\"file-empty\"></icons>\n                                    &nbsp;New file\n                                </button>\n                                <label class=\"custom-file-upload\">\n                                    <icons icon=\"file\"></icons>\n                                    &nbsp;Select YAML file\n                                    <file-reader @load=\"readFile($event)\" :setFileNameFn=\"setFileName\" :id=\"'groupFileReader'\"></file-reader>\n                                </label>\n                                <label v-if=\"fileChanged\" class=\"pl-2\">\n                                    <icons icon=\"text-balloon\"></icons>\n                                    You have unsaved changes. You may want to save the file to preserve your changes.</label\n                                >\n                            </div>\n                        </div>\n                        <div v-if=\"doc != null\" class=\"row pt-md-2\">\n                            <div class=\"col\">\n                                <file-details :filename=\"filename\" :doc=\"doc\" :platforms=\"platforms\" :showName=\"false\"></file-details>\n                            </div>\n                        </div>\n                        <div v-if=\"doc != null\" class=\"row pt-md-2\">\n                            <div class=\"col card-text\">\n                                <button type=\"button\" class=\"btn\" @click=\"downloadYaml('groups', 'group_name')\">\n                                    <icons icon=\"save\"></icons>\n                                    &nbsp;Save YAML file\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div v-if=\"doc != null\" class=\"row\">\n            <div class=\"col\">\n                <card type=\"card\">\n                    <div class=\"row\">\n                        <div class=\"col\">\n                            <p>\n                                <button type=\"button\" class=\"btn btn-secondary\" @click=\"addItem('groups', 'group_name', emptyGroupObject)\">\n                                    <icons icon=\"plus\"></icons>\n                                    &nbsp;Add group\n                                </button>\n                            </p>\n                        </div>\n                    </div>\n                    <div class=\"row mt-md-2\">\n                        <div class=\"col\">\n                            <base-input v-model=\"filters.filter.value\" placeholder=\"filter\" />\n                            <v-table\n                                :data=\"doc.groups\"\n                                @selectionChanged=\"selectItem($event)\"\n                                selectedClass=\"table-selected-custom\"\n                                :filters=\"filters\"\n                                class=\"table-custom\"\n                            >\n                                <thead slot=\"head\">\n                                    <v-th sortKey=\"group_name\" defaultSort=\"asc\" width=\"400\">Group name</v-th>\n                                    <v-th sortKey=\"campaign\" width=\"400\">Campaign</v-th>\n                                    <v-th sortKey=\"enabled\" width=\"150\">Enabled</v-th>\n                                    <th></th>\n                                </thead>\n                                <tbody slot=\"body\" slot-scope=\"{ displayData }\">\n                                    <v-tr v-for=\"(row, i) in displayData\" :key=\"i\" :row=\"row\">\n                                        <td>{{ row.group_name }}</td>\n                                        <td>{{ row.campaign }}</td>\n                                        <td>{{ row.enabled | listToString }}</td>\n                                        <td>\n                                            <i\n                                                class=\"tim-icons icon-trash-simple cursor-pointer\"\n                                                :idx=\"i\"\n                                                :group_name=\"row.group_name\"\n                                                @click=\"deleteGroup($event)\"\n                                            />\n                                        </td>\n                                    </v-tr>\n                                </tbody>\n                            </v-table>\n                        </div>\n                    </div>\n                </card>\n            </div>\n            <div class=\"col\">\n                <card type=\"card\">\n                    <groups-detail\n                        v-if=\"getSelectedItem() != null\"\n                        :group=\"getSelectedItem()\"\n                        :allGroups=\"doc.groups\"\n                        :selectedPlatforms=\"doc.platform\"\n                        :groupHelpText=\"groupHelpText\"\n                    ></groups-detail>\n                </card>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport GroupsDetail from './GroupsDetail';\nimport Icons from '@/components/Icons';\nimport jsyaml from 'js-yaml';\nimport constants from '@/constants';\nimport { pageMixin } from '../mixins/PageMixins.js';\nimport { notificationMixin } from '../mixins/NotificationMixins.js';\nimport _ from 'lodash';\n\nexport default {\n    name: 'groups-page',\n    data() {\n        return {\n            filters: {\n                filter: {\n                    value: '',\n                    keys: ['group_name', 'campaign', 'enabled']\n                }\n            },\n            data_columns: ['group_name', 'campaign', 'enabled'],\n            groupFileToRender: 'https://raw.githubusercontent.com/wiki/rabobank-cdc/DeTTECT/YAML-administration-groups.md',\n            groupHelpText: null,\n            emptyGroupObject: constants.YAML_OBJ_GROUP\n        };\n    },\n    mixins: [pageMixin, notificationMixin],\n    components: {\n        GroupsDetail,\n        Icons\n    },\n    created: function() {\n        this.preloadMarkDown();\n    },\n    methods: {\n        readFile(event) {\n            // Loads and checks the file content\n            try {\n                let yaml_input = jsyaml.load(event.result);\n\n                if (yaml_input['file_type'] == 'group-administration') {\n                    if (yaml_input['version'] != constants.YAML_DATASOURCES_VERSION) {\n                        this.notifyDanger('Invalid file version', 'The version of the YAML file is not supported by this version of the Editor.');\n                    } else {\n                        ///////////////////////////////////////////////\n                        // Health checks before assignment to this.doc:\n                        ///////////////////////////////////////////////\n\n                        // Fix missing or empty platform:\n                        if (yaml_input.platform == undefined || yaml_input.platform == null) {\n                            yaml_input.platform = [];\n                        }\n\n                        // Fix a single platform string to list\n                        if (typeof yaml_input.platform == 'string') {\n                            yaml_input.platform = [yaml_input.platform];\n                        }\n\n                        // Only use valid platform values (in right casing):\n                        let valid_platforms = [];\n                        for (let i = 0; i < yaml_input.platform.length; i++) {\n                            if (this.platforms.indexOf(yaml_input.platform[i]) < 0) {\n                                let p = yaml_input.platform[i].toLowerCase();\n                                if (Object.keys(constants.PLATFORM_CONVERSION).indexOf(p) >= 0) {\n                                    valid_platforms.push(constants.PLATFORM_CONVERSION[p]);\n                                } else {\n                                    this.notifyDanger('Invalid value', 'Invalid value for platform was found in the YAML file and was removed.');\n                                }\n                            } else {\n                                valid_platforms.push(yaml_input.platform[i]);\n                            }\n                        }\n                        yaml_input.platform = valid_platforms;\n\n                        // Fix missing/invalid fields: group_name, campaign, enabled, technique_id, software_id\n                        for (let i = 0; i < yaml_input.groups.length; i++) {\n                            if (yaml_input.groups[i].group_name == undefined) {\n                                yaml_input.groups[i].group_name = 'empty';\n                            }\n\n                            if (yaml_input.groups[i].campaign == undefined) {\n                                yaml_input.groups[i].campaign = 'empty';\n                            }\n\n                            if (typeof yaml_input.groups[i].enabled != 'boolean') {\n                                yaml_input.groups[i].enabled = false;\n                            }\n\n                            if (yaml_input.groups[i].technique_id == undefined) {\n                                yaml_input.groups[i].technique_id = [];\n                            }\n\n                            if (yaml_input.groups[i].software_id == undefined) {\n                                yaml_input.groups[i].software_id = [];\n                            }\n\n                            if (!Array.isArray(yaml_input.groups[i].technique_id)) {\n                                yaml_input.groups[i].technique_id = [];\n                            }\n\n                            if (!Array.isArray(yaml_input.groups[i].software_id)) {\n                                yaml_input.groups[i].software_id = [];\n                            }\n\n                            for (let x = 0; x < yaml_input.groups[i].technique_id.length; x++) {\n                                if (yaml_input.groups[i].technique_id[x].match(/^T\\d{4}(\\.\\d{3}|)$/i) == null) {\n                                    yaml_input.groups[i].technique_id.splice(x, 1);\n                                }\n                                if (yaml_input.groups[i].technique_id[x] != undefined) {\n                                    yaml_input.groups[i].technique_id[x] = yaml_input.groups[i].technique_id[x].toUpperCase();\n                                }\n                            }\n                            for (let x = 0; x < yaml_input.groups[i].software_id.length; x++) {\n                                if (yaml_input.groups[i].software_id[x].match(/^S\\d{4}$/i) == null) {\n                                    yaml_input.groups[i].software_id.splice(x, 1);\n                                }\n                                if (yaml_input.groups[i].software_id[x] != undefined) {\n                                    yaml_input.groups[i].software_id[x] = yaml_input.groups[i].software_id[x].toUpperCase();\n                                }\n                            }\n                        }\n\n                        this.doc = yaml_input;\n                        this.filename = this.selected_filename;\n                        this.filters.filter.value = '';\n                        while (this.selectedRow != null && this.selectedRow.length > 0) {\n                            this.selectedRow.pop();\n                        }\n\n                        this.fileChanged = false;\n                        if (this.unwatchFunction != null) {\n                            this.unwatchFunction();\n                        }\n                        this.unwatchFunction = this.$watch(\n                            'doc',\n                            // eslint-disable-next-line no-unused-vars\n                            function(after, before) {\n                                this.fileChanged = true;\n                            },\n                            { deep: true }\n                        );\n\n                        // Reset the file reader for Chrome, so that it will be possible to load the same file again:\n                        document.getElementById('groupFileReader').value = null;\n                    }\n                } else {\n                    this.notifyInvalidFileType(this.selected_filename);\n                }\n            } catch (e) {\n                //alert(e);\n                this.notifyInvalidFileType(this.selected_filename);\n            }\n        },\n        newFile() {\n            this.filename = 'groups-new.yaml';\n            this.selected_filename = 'groups-new.yaml';\n            this.doc = _.cloneDeep(constants.YAML_OBJ_NEW_GROUPS_FILE);\n            this.selectedRow.pop();\n            this.deletedRows = [];\n            this.fileChanged = false;\n            this.setWatch();\n        },\n        cleanupBeforeDownload() {\n            // empty function. must be here to make downloadYaml() work for every page\n        },\n        convertBeforeDownload() {\n            // empty function. must be here to make downloadYaml() work for every page\n        },\n        deleteGroup(event) {\n            this.deleteItem(event, 'groups', 'group_name', 'Group', this.recoverDeletedGroup);\n        },\n        recoverDeletedGroup(group_name) {\n            this.recoverDeletedItem('groups', group_name);\n        },\n        preloadMarkDown() {\n            // Preload the group help text from Github\n\n            this.groupHelpText = 'Loading the help content...';\n            this.$http.get(this.groupFileToRender).then(\n                (response) => {\n                    this.groupHelpText = response.body.replace(/\\[(.+)\\](\\([#\\w-]+\\))/gm, '$1'); // remove links to other wiki pages\n                    this.groupHelpText = this.groupHelpText.match(/## Group object((.*|\\n)*)/gim, '$1')[0];\n                    this.groupHelpText = this.groupHelpText.replace(/^## Group object/gim, '');\n                },\n                // eslint-disable-next-line no-unused-vars\n                (response) => {\n                    this.groupHelpText = 'An error occurred while loading the help content.';\n                }\n            );\n        },\n        notifyInvalidFileType(filename) {\n            this.notifyDanger('Invalid YAML file type', \"The file '\" + filename + \"' is not a valid group administration file.\");\n        }\n    },\n    filters: {\n        listToString: function(value) {\n            if (Array.isArray(value)) {\n                return value.join(', ');\n            } else {\n                return value;\n            }\n        }\n    }\n};\n</script>\n\n<style></style>\n"]}]}